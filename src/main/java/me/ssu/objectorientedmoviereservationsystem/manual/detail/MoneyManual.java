package me.ssu.objectorientedmoviereservationsystem.manual.detail;

public class MoneyManual {
/*
1. 금액(Money)
	: 금액과 관련된 다양한 계산을 구하는 클래스
	: 돈과 소수점을 다룰 때 BigDecimal 사용하기(선택이 아니라 필수)
	1-1) 변수
		1-1)-1. 제로
		1-1)-2. 금액(amount)

	1-2) 생성자
		1-2)-1. Money(금액)

	1-3) 메소드
		: BigDecimal을 이용한 사칙연산
		1-3)-1. 더하기
		1-3)-2. 빼기
		1-3)-3. 곱하기(비율 할인 적용)

	1-4) 제약
		1-4)-1. 값이 적을 때
		1-4)-2. 값이 많을 때

TODO Q 1 : 1장에서 금액을 구할 때 Long 타입을 사용했던 이유와 지금?
	Long 타입은 변수의 크기나 연산자의 종류와 관련된 구현 괌점의 제약은 표현 할 수 있다.
	Money 타입처럼 저장하는 값이 금액과 관련돼 있다는 의미를 전달할 수 없다.
	금액과 관련된 로직이 서로 다른 곳에 중복되어 구현되는 것을 막을 수 없다.

	TODO “객체지향의 장점은 객체를 이용해 도메인의 의미를 풍부하게 표현할 수 있다.”
*/
}